name: Build

on:
  push:

env:
  CIBW: '3.2.1'

jobs:
  build:
    name: 'Build: ${{ matrix.os }}'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-24.04
          - ubuntu-24.04-arm
#         - macos-15-intel
#         - macos-15

    steps:
      - name: Super tar
        run: sudo chmod u+s /usr/bin/tar && sudo systemctl stop docker && sudo chmod 777 /var/lib/docker
        if: runner.os == 'Linux'

      - name: Docker cache restore
        uses: actions/cache/restore@v4
        with:
          path: /var/lib/docker
          key: docker-${{ matrix.os }}-${{ env.CIBW }}
        if: runner.os == 'Linux'
        id: cache

      - uses: actions/checkout@v5

      - uses: actions/setup-python@v6
        with:
          python-version: '3.11'

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==$CIBW

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse

      - name: Docker stop
        run: sudo systemctl stop docker && sudo chmod 777 /var/lib/docker
        if: runner.os == 'Linux' && steps.cache.outputs.cache-hit != 'true'

      - name: Docker cache save
        uses: actions/cache/save@v4
        with:
          path: /var/lib/docker
          key: docker-${{ matrix.os }}-${{ env.CIBW }}
        if: runner.os == 'Linux' && steps.cache.outputs.cache-hit != 'true'

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: ./wheelhouse/*.whl

  release:
    name: 'Release'
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write

    steps:
      - uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          path: ./wheelhouse

      - uses: softprops/action-gh-release@v2
        with:
          tag_name: builds/${{ github.ref_name }}
          target_commitish: ${{ github.sha }}
          prerelease: true
          files: ./wheelhouse/*.whl
